<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: perl | As a SW/Ops/DB Engineer]]></title>
  <link href="http://tech.riywo.com/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://tech.riywo.com/"/>
  <updated>2013-04-23T19:10:38-07:00</updated>
  <id>http://tech.riywo.com/</id>
  <author>
    <name><![CDATA[riywo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[multiple assignment from regexp]]></title>
    <link href="http://tech.riywo.com/blog/2013/04/17/multiple-assignment-from-regexp/"/>
    <updated>2013-04-17T18:22:00-07:00</updated>
    <id>http://tech.riywo.com/blog/2013/04/17/multiple-assignment-from-regexp</id>
    <content type="html"><![CDATA[<p>Sometimes I want to assign multiple variables from results of regexp matching. Here are the ways in some LLs.</p>

<!-- more -->


<h3>Perl</h3>

<pre><code>my ($a, $b) = ("a:1 b:2" =~ /a:(\d) b:(\d)/);
# or
my ($a, $b) = "a:1 b:2" =~ /a:(\d) b:(\d)/;
</code></pre>

<h3>Ruby</h3>

<pre><code>a, b = "a:1 b:2".match(/a:(\d) b:(\d)/) {[$1, $2]}
# or
a, b = "a:1 b:2".match(/a:(\d) b:(\d)/).to_a[1, 2]
</code></pre>

<h3>Python</h3>

<pre><code>import re
a, b = re.match(r'a:(\d) b:(\d)', "a:1 b:2").group(1, 2)
</code></pre>

<h2>Conclusion</h2>

<ul>
<li>Perl

<ul>
<li>simplest</li>
<li>needs parentheses for multiple assignment

<ul>
<li>parentheses for matching are not mandatory, though</li>
</ul>
</li>
</ul>
</li>
<li>Ruby

<ul>
<li><code>match</code> is a method of <code>String</code> class</li>
<li>give a block or slice an array</li>
</ul>
</li>
<li>Python

<ul>
<li>needs <code>re</code> module</li>
<li><code>match</code> is a method of <code>re</code></li>
</ul>
</li>
</ul>


<p>Enjoy!</p>

<hr />

<p>簡単にファイルをパースしたい時とかに、Perlで書いた正規表現でさくっと変数に多重代入したりしてたんですが、Ruby/Pythonだとどうやるのか分からなかったのでまとめ。Thanks to @_shimada, @methane, @kyoendo, @toku_bass</p>

<p>namedcapture版も作ってみたい。というかそもそもオレオレLL比較チートシート作りたい。</p>

<ul>
<li>参考

<ul>
<li><a href="http://0xcc.net/blog/archives/000137.html">文字列操作の比較表: Ruby, Python, JavaScript, Perl, C++ - bkブログ</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
